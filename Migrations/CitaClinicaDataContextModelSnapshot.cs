// <auto-generated />
using System;
using MetaenlaceCitaClinica.Models.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MetaenlaceCitaClinica.Migrations
{
    [DbContext(typeof(CitaClinicaDataContext))]
    partial class CitaClinicaDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MetaenlaceCitaClinica.Models.Entity.Cita", b =>
                {
                    b.Property<int>("CitaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CitaID"));

                    b.Property<int?>("Attribute11")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("MedicoID")
                        .HasColumnType("int");

                    b.Property<string>("MotivoCita")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("PacienteID")
                        .HasColumnType("int");

                    b.HasKey("CitaID");

                    b.HasIndex("MedicoID");

                    b.HasIndex("PacienteID");

                    b.ToTable("Citas");
                });

            modelBuilder.Entity("MetaenlaceCitaClinica.Models.Entity.Diagnostico", b =>
                {
                    b.Property<int>("DiagnosticoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiagnosticoID"));

                    b.Property<int>("CitaID")
                        .HasColumnType("int");

                    b.Property<string>("Enfermedad")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ValoracionEspecialista")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("DiagnosticoID");

                    b.HasIndex("CitaID")
                        .IsUnique();

                    b.ToTable("Diagnosticos");
                });

            modelBuilder.Entity("MetaenlaceCitaClinica.Models.Entity.Medico", b =>
                {
                    b.Property<int>("UsuarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioID"));

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NumColegiado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioNom")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("UsuarioID");

                    b.ToTable("Medicos");
                });

            modelBuilder.Entity("MetaenlaceCitaClinica.Models.Entity.MedicoPaciente", b =>
                {
                    b.Property<int>("MedicoID")
                        .HasColumnType("int");

                    b.Property<int>("PacienteID")
                        .HasColumnType("int");

                    b.HasKey("MedicoID", "PacienteID");

                    b.HasIndex("PacienteID");

                    b.ToTable("MedicoPacientes");
                });

            modelBuilder.Entity("MetaenlaceCitaClinica.Models.Entity.Paciente", b =>
                {
                    b.Property<int>("UsuarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioID"));

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NSS")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NumTarjeta")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UsuarioNom")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("UsuarioID");

                    b.ToTable("Pacientes");
                });

            modelBuilder.Entity("MetaenlaceCitaClinica.Models.Entity.Cita", b =>
                {
                    b.HasOne("MetaenlaceCitaClinica.Models.Entity.Medico", "Medico")
                        .WithMany("Citas")
                        .HasForeignKey("MedicoID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MetaenlaceCitaClinica.Models.Entity.Paciente", "Paciente")
                        .WithMany("Citas")
                        .HasForeignKey("PacienteID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Medico");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("MetaenlaceCitaClinica.Models.Entity.Diagnostico", b =>
                {
                    b.HasOne("MetaenlaceCitaClinica.Models.Entity.Cita", "Cita")
                        .WithOne("Diagnostico")
                        .HasForeignKey("MetaenlaceCitaClinica.Models.Entity.Diagnostico", "CitaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cita");
                });

            modelBuilder.Entity("MetaenlaceCitaClinica.Models.Entity.MedicoPaciente", b =>
                {
                    b.HasOne("MetaenlaceCitaClinica.Models.Entity.Medico", "Medico")
                        .WithMany("Pacientes")
                        .HasForeignKey("MedicoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MetaenlaceCitaClinica.Models.Entity.Paciente", "Paciente")
                        .WithMany("Medicos")
                        .HasForeignKey("PacienteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medico");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("MetaenlaceCitaClinica.Models.Entity.Cita", b =>
                {
                    b.Navigation("Diagnostico");
                });

            modelBuilder.Entity("MetaenlaceCitaClinica.Models.Entity.Medico", b =>
                {
                    b.Navigation("Citas");

                    b.Navigation("Pacientes");
                });

            modelBuilder.Entity("MetaenlaceCitaClinica.Models.Entity.Paciente", b =>
                {
                    b.Navigation("Citas");

                    b.Navigation("Medicos");
                });
#pragma warning restore 612, 618
        }
    }
}
